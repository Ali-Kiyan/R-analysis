}
}
}
#remaining NA rows
sum(is.na(music_cleaned))
#  {
#    if(grepl("pop", music_cleaned$terms[i]))
#    {
#     music_cleaned$song.hotttnesss[i] <- Pop_Song_hotness_mean
#    }
#  }
#}
#remaining NA rows
#sum(is.na(music_cleaned))
#for Classical Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("classic", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Classic_Song_hotness_mean
}
}
}
#remaining NA rows
sum(is.na(music_cleaned))
#for country Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("country", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Country_Song_hotness_mean
}
}
}
#remaining NA rows
#sum(is.na(music_cleaned))
#getting the number  of NAs
sum(is.na(music_cleaned$song.hotttnesss))
#eliminating NA left in  the dataset
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
#checking the number of zero values for the column when zero value is meaningless
sum(music_cleaned$loudness == 0)
sum(music_cleaned$tempo ==0)
#removing zeros in the rows
#music_cleaned <- music_cleaned[-which(music_cleaned$song.hotttnesss == 0),]
#using subset to eliminate zeros (alternative to perivious line)
#music_cleaned <- subset(music_cleaned,song.hotttnesss!=0)
music_cleaned <- subset(music_cleaned,tempo!=0)
music_cleaned <- subset(music_cleaned,loudness!=0)
#num of complete case (without NA)
sum(as.numeric(complete.cases(music_cleaned)))
#removing the nominal value
music_cleaned <- music_cleaned[,-c(11)]
#normalizing with range between -1 and 1 (for more accurate)
col <- ncol(music_cleaned)
newmin = -1
newmax= 1
#initializing
nrml_music <- 0
#normalizing
for(j in 1:col){
oldmin <- min(music_cleaned[j])
oldmax <- max(music_cleaned[j])
current <- music_cleaned[j]
temp <- ((current-oldmin)/(oldmax-oldmin))*(newmax-newmin) + newmin
temp <- as.data.frame(temp)
nrml_music <- cbind(nrml_music, data.frame(temp))
}
#removing extra columns
nrml_music <- nrml_music[,-c(1)]
#check if the range is correct
min(nrml_music$song.hotttnesss)
max(nrml_music$song.hotttnesss)
#standardisation with substraction of mean and division by standard deviation with scale function (as an alternative to normalization)
#less accurate in this case
#means = apply(music_cleaned, 2, mean)
#sds = apply(music_cleaned, 2, sd)
#nrml_music = scale(music_cleaned, center = means, scale=sds)
#calculating the distance matrix
distance = dist(nrml_music)
#clustring the normalized dataset into three cluster with k-means package
kc <- kmeans(nrml_music,4)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
#center of each cluster
kc$centers
#center of each cluster
kc$centers
# 4 clusters for the relation between artist popularity and song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=kc$cluster)
music_cleaned$cluster == 4
music_cleaned$cluster == 3
music_cleaned$cluster
music_cleaned$cluster <- kc$cluster
music_cleaned$cluster == 4
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 3)
plot(music_cleaned$popularity)
View(music_cleaned)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 3 , 1, 0)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 3 , 1, 0)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
qlot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
qlot(music_cleaned$song.hotttnesss, colour=music_cleaned$popularity == 0)
qlot(music_cleaned$song.hotttnesss, coluor=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
sum(music_cleaned$song.hotttnesss)
sum(music_cleaned$popularity)
library(party)
music_cleaned$popularity <-as.factor(music_cleaned$popularity)
cardio_tree <- ctree(popularity~*,music_cleaned)
cardio_tree <- ctree(popularity~.,music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity~.-cluster,music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity~.,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity~.,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity~. - cluster,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity~ tempo+loudness ,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity ~ . ,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity ~ tempo ,data=music_cleaned)
plot(cardio_tree)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hotnesss,data=music_cleaned)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hottttnesss,data=music_cleaned)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hottttnesss,data=music_cleaned)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hottttnesss,music_cleaned)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hotttnesss,music_cleaned)
plot(cardio_tree)
str(music_cleaned)
cardio_tree <- ctree(popularity ~ tempo + loudness + artist.hotttnesss ,music_cleaned)
plot(cardio_tree)
popularity_tree <- ctree(popularity ~ tempo + loudness + artist.hotttnesss ,music_cleaned)
plot(popularity_tree)
popularity_tree <- ctree(song.hotttnesss ~ tempo + loudness + artist.hotttnesss ,music_cleaned)
plot(popularity_tree)
tab<-table(predict(popularity_tree), music_cleaned$popularity)
tab
sum(diag(tab))/sum(tab)
popularity_tree <- ctree(song.hotttnesss ~ tempo + loudness + artist.hotttnesss ,music_cleaned$popularity)
plot(popularity_tree)
str(music_cleaned)
popularity_tree <- ctree(song.hotttnesss ~ tempo + loudness + artist.hotttnesss ,music_cleaned$popularity)
popularity_tree <- ctree(popularity ~ tempo + loudness + artist.hotttnesss ,music_cleaned)
plot(popularity_tree)
str(music_cleaned)
tab<-table(predict(popularity_tree), music_cleaned$popularity)
tab
sum(diag(tab))/sum(tab)
#using respective packages
library(stringr)
library(cluster)
library(dplyr)
library(psych)
library(ggplot2)
#reading data set
music <- read.csv("music.csv", header=T)
#selecting musiclly significant features for analysis
music_cleaned <- music[,c(1, 7, 9, 10, 11, 18, 24,26, 28, 29, 30, 32)]
#check if there is any NA in the dataset
any(is.na(music_cleaned))
#checking the structure and dimention of the dataset
dim(music_cleaned)
str(music_cleaned)
#using stringr and dplyr retrun a separate dataset if the track has one of the 5 main genre type in its terms column
#Rock dataset
contains_rock <- music_cleaned %>%
filter(str_detect(music_cleaned$terms, "rock"))
nrow(contains_rock)
#Jazz dataset
contains_Jazz <- music_cleaned %>%
filter(str_detect(music_cleaned$terms, "jazz"))
nrow(contains_Jazz)
#Pop dataset
contains_Pop <- music_cleaned %>%
filter(str_detect(music_cleaned$terms, "pop"))
nrow(contains_Pop)
#classic dataset
contains_Classic <- music_cleaned %>%
filter(str_detect(music_cleaned$terms, "classic"))
nrow(contains_Classic)
#country dataset
contains_Country <- music_cleaned %>%
filter(str_detect(music_cleaned$terms, "country"))
nrow(contains_Country)
Rock_Song_hotness_mean <- mean(contains_rock$song.hotttnesss, na.rm = TRUE)
Jazz_Song_hotness_mean <- mean(contains_Jazz$song.hotttnesss, na.rm = TRUE)
Pop_Song_hotness_mean <- mean(contains_Pop$song.hotttnesss, na.rm = TRUE)
Classic_Song_hotness_mean <- mean(contains_Classic$song.hotttnesss, na.rm = TRUE)
Country_Song_hotness_mean <- mean(contains_Country$song.hotttnesss, na.rm = TRUE)
#3.impute the mean to every NA row
length <- nrow(music_cleaned)
#for Rock Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("rock", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Rock_Song_hotness_mean
}
}
}
#remaining NA rows
#sum(is.na(music_cleaned))
#for Jazz Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("jazz", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Jazz_Song_hotness_mean
}
}
}
#remaining NA rows
sum(is.na(music_cleaned))
#  {
#    if(grepl("pop", music_cleaned$terms[i]))
#    {
#     music_cleaned$song.hotttnesss[i] <- Pop_Song_hotness_mean
#    }
#  }
#}
#remaining NA rows
#sum(is.na(music_cleaned))
#for Classical Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("classic", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Classic_Song_hotness_mean
}
}
}
#remaining NA rows
sum(is.na(music_cleaned))
#for country Tracks
for(i in 1:length)
{
if(is.na(music_cleaned$song.hotttnesss[i]))
{
if(grepl("country", music_cleaned$terms[i]))
{
music_cleaned$song.hotttnesss[i] <- Country_Song_hotness_mean
}
}
}
#remaining NA rows
#sum(is.na(music_cleaned))
#getting the number  of NAs
sum(is.na(music_cleaned$song.hotttnesss))
#eliminating NA left in  the dataset
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
#checking the number of zero values for the column when zero value is meaningless
sum(music_cleaned$loudness == 0)
sum(music_cleaned$tempo ==0)
#removing zeros in the rows
#music_cleaned <- music_cleaned[-which(music_cleaned$song.hotttnesss == 0),]
#using subset to eliminate zeros (alternative to perivious line)
#music_cleaned <- subset(music_cleaned,song.hotttnesss!=0)
music_cleaned <- subset(music_cleaned,tempo!=0)
music_cleaned <- subset(music_cleaned,loudness!=0)
#num of complete case (without NA)
sum(as.numeric(complete.cases(music_cleaned)))
#removing the nominal value
music_cleaned <- music_cleaned[,-c(11)]
#normalizing with range between -1 and 1 (for more accurate)
col <- ncol(music_cleaned)
newmin = -1
newmax= 1
#initializing
nrml_music <- 0
#normalizing
for(j in 1:col){
oldmin <- min(music_cleaned[j])
oldmax <- max(music_cleaned[j])
current <- music_cleaned[j]
temp <- ((current-oldmin)/(oldmax-oldmin))*(newmax-newmin) + newmin
temp <- as.data.frame(temp)
nrml_music <- cbind(nrml_music, data.frame(temp))
}
#removing extra columns
nrml_music <- nrml_music[,-c(1)]
#check if the range is correct
min(nrml_music$song.hotttnesss)
max(nrml_music$song.hotttnesss)
#clustring the normalized dataset into three cluster with k-means package
kc <- kmeans(nrml_music,4)
# 4 clusters for the relation between artist popularity and song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=kc$cluster)
#adding each song cluster in song popularity/artist papularity analysis
music_cleaned$cluster <- kc$cluster
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 3)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 2)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 1)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 3)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 2)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 1)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 2)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, NULL)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, "NULL")
sum(music_cleaned$popularity)
sum(music_cleaned$popularity)
View(music_cleaned)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, "NULL")
complete.cases(music_cleaned_backup)
complete.cases(music_cleaned)
music_cleaned <- complete.cases(music_cleaned)
music_cleaned <- read.csv("musicCleaned.csv", header=T)
View(music_cleaned)
#clustring the normalized dataset into three cluster with k-means package
kc <- kmeans(nrml_music,4)
# 4 clusters for the relation between artist popularity and song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=kc$cluster)
#adding each song cluster in song popularity/artist papularity analysis
music_cleaned$cluster <- kc$cluster
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 2)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 2)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 1)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, "NULL")
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, "NULL")
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
View(music_cleaned)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, NULL)
remove(music_cleaned$popularity)
music_cleaned$popularity <- NULL
View(music_cleaned)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, NULL)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, NULL)
View(music_cleaned)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, )
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, 'NULL')
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, 'NULL')
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
View(music_cleaned)
View(music)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, 3)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, 3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
music_cleaned$song.hotttnesss > 0.5
music_cleaned$popularity <- ifelse(0 & 1 , 1, 3)
music_cleaned$popularity <- ifelse(0 | 1 , 1, 3)
music_cleaned$cluster == 4
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss > 0.5, col=music_cleaned$cluster == 4)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4  & music_cleaned$song.hotttnesss > 0.5)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, 3)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, 3)
sum(music_cleaned$popularity)
sum(music_cleaned$popularity==1)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss > 0.5 & music_cleaned$cluster == 4 , 1, 3)
sum(music_cleaned$popularity==1)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, 3)
sum(music_cleaned$popularity==0)
nrow(music_cleaned$popularity==0)
(music_cleaned$popularity==0)
sum(music_cleaned$popularity==1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
# 6 clusters for the relationship between popularity of the song and its loudness
plot(music_cleaned$song.hotttnesss ~ music_cleaned$loudness, data = music_cleaned,col=kc$cluster)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & music_cleaned$cluster == 1 & music_cleaned$cluster == 2 , 0, 3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5 & if(music_cleaned$cluster == 1 & music_cleaned$cluster == 2) , 0, 3)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5, ifelse(music_cleaned$cluster == 1 ,ifelse(music_cleaned$cluster == 2, 0, 3) , 3) ,3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity=0)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity=3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5, ifelse(music_cleaned$cluster == 1,0, 3), 3)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
music_cleaned$popularity <- ifelse(music_cleaned$song.hotttnesss < 0.5, ifelse(music_cleaned$cluster == 2,0, 3), 3)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
music_cleaned$popularity <- if(music_cleaned$song.hotttnesss < 0.5, if(music_cleaned$cluster == 2,0))
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
music_cleaned$popularity <-
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3), ifelse(music_cleaned$song.hotttnesss < 0.5, ifelse(music_cleaned$cluster == 1, 0, 3),3))
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
music_cleaned$popularity <-
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3), ifelse(music_cleaned$song.hotttnesss < 0.5, ifelse(music_cleaned$cluster == 1, 0, 3),3))
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
music_cleaned$popularity <-
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
music_cleaned$popularity <-
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
music_cleaned$popularity <- NULL
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss ~ music_cleaned$song.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$cluster == 4  & music_cleaned$song.hotttnesss > 0.5)
#finding cluster with highest song popularity
plot(music_cleaned$artist.hotttnesss ~ music_cleaned$song.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==4)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==1)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==2)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 1 |  ifelse(music_cleaned$cluster == 2 & music_cleaned$cluster == 4, ifelse(music_cleaned$song.hotttnesss < 0.5, 0, 3),3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 1 |  music_cleaned$cluster == 2 | music_cleaned$cluster == 4, ifelse(music_cleaned$song.hotttnesss < 0.5, 0, 3),3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 1 || music_cleaned$cluster == 2 || music_cleaned$cluster == 4, ifelse(music_cleaned$song.hotttnesss < 0.5, 0, 3),3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 1 || music_cleaned$cluster == 2 || music_cleaned$cluster == 4, ifelse(music_cleaned$song.hotttnesss < 0.5, 0, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
music_cleaned$popularity <- NULL
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),ifelse(music_cleaned$cluster!=3,0,3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),ifelse(music_cleaned$cluster!=3,0,3))
music_cleaned$popularity <- NULL
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),ifelse(music_cleaned$cluster!=3,0,3))
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==1)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==3)
plot(music_cleaned$song.hotttnesss ,music_cleaned$artist.hotttnesss,col=music_cleaned$popularity==0)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==0)
write.csv(musicCleanedWithPopularity)
write.csv(nrml_music, file='musicCleanedWithPopularity.csv')
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 1)
plot(music_cleaned$song.hotttnesss, col=music_cleaned$popularity == 0)
sum(music_cleaned$popularity==NULL)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==3)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==3)
#finding cluster with highest song popularity
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=music_cleaned$cluster==3)
music_cleaned$popularity <- ifelse(music_cleaned$cluster == 4 , ifelse(music_cleaned$song.hotttnesss > 0.5, 1, 3),ifelse(music_cleaned$cluster!=3,0,3))
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==3)
music_cleaned <- subset(music_cleaned,popularity!=3)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss)
qplot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster)
plot(music_cleaned$artist.hotttnesss, music_cleaned$tempo, col=music_cleaned$cluster)
plot(music_cleaned$tempo, music_cleaned$song.hotttnesss, col=music_cleaned$cluster)
cluster
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss, col=music_cleaned$cluster)
write.csv(music_cleaned, file='musicCleanedWithPopularity.csv')
write.csv(music_cleaned, file='musicCleanedWithPopularity.csv')
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==3)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==1)
plot(music_cleaned$artist.hotttnesss, music_cleaned$song.hotttnesss,col=music_cleaned$popularity==0)
